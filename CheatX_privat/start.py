# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'start.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(284, 208)
        MainWindow.setStyleSheet("background-color: rgb(255, 219, 146);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(70, 30, 181, 20))
        self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setGeometry(QtCore.QRect(70, 80, 181, 20))
        self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(20, 33, 47, 13))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(20, 82, 47, 13))
        self.label_2.setObjectName("label_2")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(110, 140, 101, 41))
        self.pushButton.setStyleSheet("QPushButton{\n"
"background-color: rgb(255, 183, 124);\n"
"}\n"
"QPushButton:hover{\n"
"background-color: rgb(255, 163, 101);\n"
"}")
        self.pushButton.setObjectName("pushButton")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(110, 60, 101, 16))
        self.label_3.setStyleSheet("color: red;s")
        self.label_3.setText("")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(100, 110, 101, 16))
        self.label_4.setStyleSheet("color: red;")
        self.label_4.setText("")
        self.label_4.setObjectName("label_4")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.pushButton.clicked.connect(self.get_value)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "CheatX - Login"))
        MainWindow.setWindowIcon(QtGui.QIcon('C:/Users/stvin/Documents/x.gif'))
        self.label.setText(_translate("MainWindow", "Логин:"))
        self.label_2.setText(_translate("MainWindow", "Пароль:"))
        self.pushButton.setText(_translate("MainWindow", "Войти"))

    def get_value(self):

        self.user = self.lineEdit.text()
        self.password = self.lineEdit_2.text()

        from wmi import WMI
        import requests
        import socket
        from time import sleep
        import os

        appdata_p = os.environ['AppData']
        folder = '%s\\CheatX' % (appdata_p)
        check_folder = os.path.isdir(folder)
        if check_folder == False:
            os.mkdir('%s\\CheatX' % (appdata_p))

        hwid = WMI().Win32_ComputerSystemProduct()[0].UUID
        print(hwid)
        appdata_p = os.environ['AppData']
        userr = {'user': '%s %s %s' % (self.user, self.password, hwid)}
        user = userr['user']
        print(userr["user"])

        self.label_4.setText("")
        self.label_3.setText("")
        rrr = requests.get('https://raw.githubusercontent.com/hohopro35/ch/main/host_ip')
        host_ip = rrr.text
        ip = host_ip.replace('\n', '')
        print(ip)
        rrrr = requests.get('https://raw.githubusercontent.com/hohopro35/ch/main/host_port')
        host_port = rrrr.text
        port = int(host_port.replace('\n', ''))
        client_sock2 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        client_sock2.connect((ip, port))
        client_sock2.send(user.encode('utf8'))
        data2 = client_sock2.recv(1024)
        client_sock2.close()
        link_install = requests.get('https://raw.githubusercontent.com/hohopro35/ch/main/donwload_cheatx')
        link = link_install.text
        if data2.decode('utf8') == "True" or data2.decode('utf8') == "Hwid reserved":
            file_auth = '%s\\CheatX\\login.txt' % appdata_p
            file_auth_p = open(file_auth, 'w')
            auth_info = user
            file_auth_p.write(auth_info)
            file_auth_p.close()
            p = link.replace('\n', '')
            print(p)
            r = requests.get(p, allow_redirects=True)
            filename = p.split('/')[-1]
            open(filename, "wb").write(r.content)
            while True:
                chhh = os.path.isfile(filename)
                print(chhh)
                if chhh == True:
                    break
                sleep(1)
                print(1)
            os.system('start %s' % filename)
            print("Starting cheat...")
            exit(1)
        elif data2.decode('utf8') == 'логин введен не правильно':
            self.label_3.setGeometry(89, 50, 161, 16)
            self.label_3.setText("логин введен не правильно")

        elif data2.decode('utf8') == 'пароль введен не правильно':
            self.label_4.setGeometry(86, 100, 151, 20)
            self.label_4.setText("пароль введен не правильно")

        elif data2.decode('utf8') == 'пароль введен не правильно':
            exit(1)

        print(data2.decode('utf8'))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
